name: build-&-publish-minio-client-docker-image


# concurrency:
#   group: "publish-${{ github.ref }}"
#   cancel-in-progress: true

on:
  push:
    branches: [ master,staging ]
    tags: [ "v*.*.*" ]
  pull_request:
  workflow_dispatch:
    inputs:
      staging_tag:
        description: 'type yes for building staging tag'
        default: 'no'
        required: true

env:
  MINIO_CLIENT_REGISTRY: ${{ secrets.MINIO_CLIENT_REGISTRY }}

jobs:
    dockerize_minio:
      runs-on: [self-hosted, arc-runner]

      outputs:
        output1: ${{ steps.docker_build.outputs.COMMIT_TAG }}

      steps:
        - uses: actions/checkout@v1
      
        - name: Get the version
          id: get_version
          run: |
             BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
             SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
             echo ::set-output name=BRANCH::${BRANCH}
             echo ::set-output name=VERSION::${BRANCH}-${SHORT_SHA}

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Build & Push Docker Image.
          id: docker_build
          run: |
            # docker run --rm -v $PWD:/minio --workdir=/minio golang:1.19 go build -buildvcs=false
            cd client-api
            docker build -t $MINIO_CLIENT_REGISTRY:latest .
            echo $TAG-$SHORT_SHA
            echo "COMMIT_TAG=$TAG-$SHORT_SHA" >>$GITHUB_OUTPUT
            docker tag $MINIO_CLIENT_REGISTRY:latest $MINIO_CLIENT_REGISTRY:$TAG-$SHORT_SHA
            docker push $MINIO_CLIENT_REGISTRY:$TAG-$SHORT_SHA
        
        - name: Push latest
          if: ${{ github.event.inputs.branch }} == 'master' || ${{ github.event.inputs.branch }} == 'staging'
          run: |
            docker push ${{ secrets.MINIO_CLIENT_REGISTRY }}:latest
            docker tag $MINIO_CLIENT_REGISTRY:latest $MINIO_CLIENT_REGISTRY:staging
            docker push ${{ secrets.MINIO_CLIENT_REGISTRY }}:staging

      #  - name: Build minio Docker Image
      #    run: |
      #       docker run --rm -v $PWD:/minio --workdir=/minio golang:1.19 go build -buildvcs=false
      #       docker build -t $MINIO_REGISTRY:$TAG .
      #    env:
      #      TAG: ${{ steps.get_version.outputs.VERSION }}

      #  - name: Push minio Docker Image
      #    run: |
      #      if [[ "$PUSH_STAGING" == "yes" ]] && [[ "$BRANCH" == "staging" ]]; then
      #        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
      #        docker tag $MINIO_REGISTRY:$TAG $MINIO_REGISTRY:staging-${SHORT_SHA}
      #        docker tag $MINIO_REGISTRY:$TAG $MINIO_REGISTRY:staging
      #        docker push $MINIO_REGISTRY:staging
      #        docker push $MINIO_REGISTRY:staging-${SHORT_SHA}
      #      elif [[ "$BRANCH" != "staging" ]]; then
      #        docker push $MINIO_REGISTRY:$TAG
      #      fi
      #    env:
      #      PUSH_STAGING: ${{ github.event.inputs.staging_tag }}
      #      TAG: ${{ steps.get_version.outputs.VERSION }}
      #      BRANCH: ${{ steps.get_version.outputs.BRANCH }}
            
        - name: Clean Up The Workspace.
          if: ${{ always() }}
          run: |
            rm -rf ./*
